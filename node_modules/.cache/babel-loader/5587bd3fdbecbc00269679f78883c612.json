{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/claus/Documents/GitHub/Blog-react/Blog-react/src/containers/Blog/Blog.js\";\nimport React, { Component, Suspense } from 'react';\nimport axios from '../../axios';\nimport Posts from './Posts/Posts';\nimport './Blog.css'; // react 16.6 and higher => use React.lazy for Lazy Loading =>\n\nconst NewPost = /*#__PURE__*/React.lazy(_c = () => import('../Blog/NewPost/NewPost')); // end of React.lazy\n\n_c2 = NewPost;\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom'; // import NewPost from '../Blog/NewPost/NewPost';\n\nimport asyncComponent from '../../HOC/asyncComponent'; // dynamic import syntax - imported\n// const AsyncNewPost = asyncComponent(() => {\n//   return import('../Blog/NewPost/NewPost');\n// });\n// end of dynamic import with hoc\n\nclass Blog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      auth: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Blog\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                to: \"/posts/\",\n                exact: true,\n                activeClassName: \"my-active\",\n                activeStyle: {\n                  color: '#fa923f',\n                  textDecoration: 'underline'\n                },\n                children: \"Posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                to: {\n                  // absolute path\n                  pathname: '/newPost',\n                  // relative path: pathname: this.props.match.url + '/newPost';\n                  hash: '#submit',\n                  search: '?quick-submit=true'\n                },\n                children: \"New Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [this.state.auth ?\n        /*#__PURE__*/\n        // dynamic importing with HOC\n        // <Route path=\"/newPost\" component={AsyncNewPost} />\n        // end of dynamic import with HOC\n        // to lazy render the Posts, we use Suspense Component, imported at the top.\n        _jsxDEV(Route, {\n          path: \"/newPost\",\n          render: () => /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(NewPost, { ...this.props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/posts\",\n          component: Posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          render: () => /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"rootStyle\",\n            children: \"Not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Blog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewPost$React.lazy\");\n$RefreshReg$(_c2, \"NewPost\");","map":{"version":3,"sources":["/home/claus/Documents/GitHub/Blog-react/Blog-react/src/containers/Blog/Blog.js"],"names":["React","Component","Suspense","axios","Posts","NewPost","lazy","Route","NavLink","Switch","Redirect","asyncComponent","Blog","state","auth","render","color","textDecoration","pathname","hash","search","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,YAAP,C,CAEA;;AACA,MAAMC,OAAO,gBAAGL,KAAK,CAACM,IAAN,MAAW,MAAM,OAAO,yBAAP,CAAjB,CAAhB,C,CACA;;MADMD,O;AAGN,SAASE,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,QAAjC,QAAiD,kBAAjD,C,CACA;;AACA,OAAOC,cAAP,MAA2B,0BAA3B,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAN,SAAmBX,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BY,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE;AADA,KADmB;AAAA;;AAI3BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA,+BACE;AAAA,iCACE;AAAA,oCACE;AAAA,qCAEE,QAAC,OAAD;AACE,gBAAA,EAAE,EAAC,SADL;AAEE,gBAAA,KAAK,MAFP;AAGE,gBAAA,eAAe,EAAC,WAHlB;AAIE,gBAAA,WAAW,EAAE;AACXC,kBAAAA,KAAK,EAAE,SADI;AAEXC,kBAAAA,cAAc,EAAE;AAFL,iBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,oBADF,eAeE;AAAA,qCACE,QAAC,OAAD;AACE,gBAAA,EAAE,EAAE;AACF;AACAC,kBAAAA,QAAQ,EAAE,UAFR;AAGF;AACAC,kBAAAA,IAAI,EAAE,SAJJ;AAKFC,kBAAAA,MAAM,EAAE;AALN,iBADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAkCE,QAAC,MAAD;AAAA,mBACG,KAAKP,KAAL,CAAWC,IAAX;AAAA;AACC;AACA;AACA;AAEA;AACA,gBAAC,KAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,MAAM,EAAE,mBACN,QAAC,QAAD;AAAU,YAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApB;AAAA,mCACE,QAAC,OAAD,OAAa,KAAKO;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAND,GAcG,IAfN,eAoBE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAEjB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBApBF,eA4BE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAE,mBAAM;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,gBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoED;;AAzE0B;;AA4E7B,eAAeQ,IAAf","sourcesContent":["import React, { Component, Suspense } from 'react';\nimport axios from '../../axios';\nimport Posts from './Posts/Posts';\nimport './Blog.css';\n\n// react 16.6 and higher => use React.lazy for Lazy Loading =>\nconst NewPost = React.lazy(() => import('../Blog/NewPost/NewPost'));\n// end of React.lazy\n\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom';\n// import NewPost from '../Blog/NewPost/NewPost';\nimport asyncComponent from '../../HOC/asyncComponent';\n\n// dynamic import syntax - imported\n// const AsyncNewPost = asyncComponent(() => {\n//   return import('../Blog/NewPost/NewPost');\n// });\n// end of dynamic import with hoc\n\nclass Blog extends Component {\n  state = {\n    auth: true,\n  };\n  render() {\n    return (\n      <div className=\"Blog\">\n        <header>\n          <nav>\n            <ul>\n              <li>\n                {/* set activeClassName to change class name for active link, use NavLink */}\n                <NavLink\n                  to=\"/posts/\"\n                  exact\n                  activeClassName=\"my-active\"\n                  activeStyle={{\n                    color: '#fa923f',\n                    textDecoration: 'underline',\n                  }}\n                >\n                  Posts\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={{\n                    // absolute path\n                    pathname: '/newPost',\n                    // relative path: pathname: this.props.match.url + '/newPost';\n                    hash: '#submit',\n                    search: '?quick-submit=true',\n                  }}\n                >\n                  New Post\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <Switch>\n          {this.state.auth ? (\n            // dynamic importing with HOC\n            // <Route path=\"/newPost\" component={AsyncNewPost} />\n            // end of dynamic import with HOC\n\n            // to lazy render the Posts, we use Suspense Component, imported at the top.\n            <Route\n              path=\"/newPost\"\n              render={() => (\n                <Suspense fallback={<div>Loading...</div>}>\n                  <NewPost {...this.props} />\n                </Suspense>\n              )}\n            />\n          ) : null}\n          {/* end of lazy render*/}\n\n          {/* <Route path=\"/\" exact render={() => <h1>Home</h1>} /> */}\n\n          <Route path=\"/posts\" component={Posts} />\n\n          {/* flexible path below */}\n          {/* path: '/:' will be replaced dynamically */}\n          {/* <Route path=\"/:id\" exact component={FullPost} /> */}\n\n          {/* next 2 lines- redirect in case of restricted access or wrong address, 2 ways of doing it */}\n          {/* <Redirect from=\"/\" to=\"/posts\" /> */}\n          <Route render={() => <h1 className=\"rootStyle\">Not found</h1>} />\n          {/* end of redirect */}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}